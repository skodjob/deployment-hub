apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: opendatahub-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: datascienceclusters.datasciencecluster.opendatahub.io
spec:
  group: datasciencecluster.opendatahub.io
  names:
    kind: DataScienceCluster
    listKind: DataScienceClusterList
    plural: datascienceclusters
    shortNames:
    - dsc
    singular: datasciencecluster
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DataScienceCluster is the Schema for the datascienceclusters
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataScienceClusterSpec defines the desired state of the cluster.
            properties:
              components:
                description: Override and fine tune specific component configurations.
                properties:
                  codeflare:
                    description: CodeFlare component configuration. If CodeFlare Operator
                      has been installed in the cluster, it should be uninstalled
                      first before enabled component.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  dashboard:
                    description: Dashboard component configuration.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  datasciencepipelines:
                    description: DataServicePipeline component configuration. Require
                      OpenShift Pipelines Operator to be installed before enable component
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  kserve:
                    description: Kserve component configuration. Require OpenShift
                      Serverless and OpenShift Service Mesh Operators to be installed
                      before enable component Does not support enabled ModelMeshServing
                      at the same time
                    properties:
                      defaultDeploymentMode:
                        description: Configures the default deployment mode for Kserve.
                          This can be set to 'Serverless' or 'RawDeployment'. The
                          value specified in this field will be used to set the default
                          deployment mode in the 'inferenceservice-config' configmap
                          for Kserve. This field is optional. If no default deployment
                          mode is specified, Kserve will use Serverless mode.
                        enum:
                        - Serverless
                        - RawDeployment
                        pattern: ^(Serverless|RawDeployment)$
                        type: string
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                      serving:
                        description: Serving configures the KNative-Serving stack
                          used for model serving. A Service Mesh (Istio) is prerequisite,
                          since it is used as networking layer.
                        properties:
                          ingressGateway:
                            description: IngressGateway allows to customize some parameters
                              for the Istio Ingress Gateway that is bound to KNative-Serving.
                            properties:
                              certificate:
                                description: Certificate specifies configuration of
                                  the TLS certificate securing communications of the
                                  for Ingress Gateway.
                                properties:
                                  secretName:
                                    description: SecretName specifies the name of
                                      the Kubernetes Secret resource that contains
                                      a TLS certificate secure HTTP communications
                                      for the KNative network.
                                    type: string
                                  type:
                                    default: OpenshiftDefaultIngress
                                    description: 'Type specifies if the TLS certificate
                                      should be generated automatically, or if the
                                      certificate is provided by the user. Allowed
                                      values are: * SelfSigned: A certificate is going
                                      to be generated using an own private key. *
                                      Provided: Pre-existence of the TLS Secret (see
                                      SecretName) with a valid certificate is assumed.
                                      * OpenshiftDefaultIngress: Default ingress certificate
                                      configured for OpenShift'
                                    enum:
                                    - SelfSigned
                                    - Provided
                                    - OpenshiftDefaultIngress
                                    type: string
                                type: object
                              domain:
                                description: Domain specifies the DNS name for intercepting
                                  ingress requests coming from outside the cluster.
                                  Most likely, you will want to use a wildcard name,
                                  like *.example.com. If not set, the domain of the
                                  OpenShift Ingress is used. If you choose to generate
                                  a certificate, this is the domain used for the certificate
                                  request.
                                type: string
                            type: object
                          managementState:
                            default: Managed
                            enum:
                            - Managed
                            - Unmanaged
                            - Removed
                            pattern: ^(Managed|Unmanaged|Force|Removed)$
                            type: string
                          name:
                            default: knative-serving
                            description: Name specifies the name of the KNativeServing
                              resource that is going to be created to instruct the
                              KNative Operator to deploy KNative serving components.
                              This resource is created in the "knative-serving" namespace.
                            type: string
                        type: object
                    type: object
                  kueue:
                    description: Kueue component configuration.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  modelmeshserving:
                    description: ModelMeshServing component configuration. Does not
                      support enabled Kserve at the same time
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  modelregistry:
                    description: ModelRegistry component configuration.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  ray:
                    description: Ray component configuration.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  trainingoperator:
                    description: Training Operator component configuration.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  trustyai:
                    description: TrustyAI component configuration.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  workbenches:
                    description: Workbenches component configuration.
                    properties:
                      devFlags:
                        description: Add developer fields
                        properties:
                          manifests:
                            description: List of custom manifests for the given component
                            items:
                              properties:
                                contextDir:
                                  default: manifests
                                  description: contextDir is the relative path to
                                    the folder containing manifests in a repository,
                                    default value "manifests"
                                  type: string
                                sourcePath:
                                  default: ""
                                  description: 'sourcePath is the subpath within contextDir
                                    where kustomize builds start. Examples include
                                    any sub-folder or path: `base`, `overlays/dev`,
                                    `default`, `odh` etc.'
                                  type: string
                                uri:
                                  default: ""
                                  description: uri is the URI point to a git repo
                                    with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                                  type: string
                              type: object
                            type: array
                        type: object
                      managementState:
                        description: "Set to one of the following values: \n - \"Managed\"
                          : the operator is actively managing the component and trying
                          to keep it active. It will only upgrade the component if
                          it is safe to do so \n - \"Removed\" : the operator is actively
                          managing the component and will not install it, or if it
                          is installed, the operator will try to remove it"
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: DataScienceClusterStatus defines the observed state of DataScienceCluster.
            properties:
              conditions:
                description: Conditions describes the state of the DataScienceCluster
                  resource.
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              errorMessage:
                type: string
              installedComponents:
                additionalProperties:
                  type: boolean
                description: List of components with status if installed or not
                type: object
              phase:
                description: Phase describes the Phase of DataScienceCluster reconciliation
                  state This is used by OLM UI to provide status information to the
                  user
                type: string
              relatedObjects:
                description: RelatedObjects is a list of objects created and maintained
                  by this operator. Object references will be added to this list after
                  they have been created AND found in the cluster.
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              release:
                description: Version and release type
                properties:
                  name:
                    type: string
                  version:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: dscinitializations.dscinitialization.opendatahub.io
spec:
  group: dscinitialization.opendatahub.io
  names:
    kind: DSCInitialization
    listKind: DSCInitializationList
    plural: dscinitializations
    shortNames:
    - dsci
    singular: dscinitialization
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Current Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Created At
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: DSCInitialization is the Schema for the dscinitializations API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DSCInitializationSpec defines the desired state of DSCInitialization.
            properties:
              applicationsNamespace:
                default: opendatahub
                description: Namespace for applications to be installed, non-configurable,
                  default to "opendatahub"
                type: string
              devFlags:
                description: Internal development useful field to test customizations.
                  This is not recommended to be used in production environment.
                properties:
                  logmode:
                    default: production
                    enum:
                    - devel
                    - development
                    - prod
                    - production
                    type: string
                  manifestsUri:
                    description: Custom manifests uri for odh-manifests
                    type: string
                type: object
              monitoring:
                description: Enable monitoring on specified namespace
                properties:
                  managementState:
                    description: 'Set to one of the following values: - "Managed"
                      : the operator is actively managing the component and trying
                      to keep it active. It will only upgrade the component if it
                      is safe to do so. - "Removed" : the operator is actively managing
                      the component and will not install it, or if it is installed,
                      the operator will try to remove it.'
                    enum:
                    - Managed
                    - Removed
                    pattern: ^(Managed|Unmanaged|Force|Removed)$
                    type: string
                  namespace:
                    default: opendatahub
                    description: Namespace for monitoring if it is enabled
                    type: string
                type: object
              serviceMesh:
                description: Configures Service Mesh as networking layer for Data
                  Science Clusters components. The Service Mesh is a mandatory prerequisite
                  for single model serving (KServe) and you should review this configuration
                  if you are planning to use KServe. For other components, it enhances
                  user experience; e.g. it provides unified authentication giving
                  a Single Sign On experience.
                properties:
                  auth:
                    description: Auth holds configuration of authentication and authorization
                      services used by Service Mesh in Opendatahub.
                    properties:
                      audiences:
                        default:
                        - https://kubernetes.default.svc
                        description: Audiences is a list of the identifiers that the
                          resource server presented with the token identifies as.
                          Audience-aware token authenticators will verify that the
                          token was intended for at least one of the audiences in
                          this list. If no audiences are provided, the audience will
                          default to the audience of the Kubernetes apiserver (kubernetes.default.svc).
                        items:
                          type: string
                        type: array
                      namespace:
                        description: Namespace where it is deployed. If not provided,
                          the default is to use '-auth-provider' suffix on the ApplicationsNamespace
                          of the DSCI.
                        type: string
                    type: object
                  controlPlane:
                    description: ControlPlane holds configuration of Service Mesh
                      used by Opendatahub.
                    properties:
                      metricsCollection:
                        default: Istio
                        description: MetricsCollection specifies if metrics from components
                          on the Mesh namespace should be collected. Setting the value
                          to "Istio" will collect metrics from the control plane and
                          any proxies on the Mesh namespace (like gateway pods). Setting
                          to "None" will disable metrics collection.
                        enum:
                        - Istio
                        - None
                        type: string
                      name:
                        default: data-science-smcp
                        description: Name is a name Service Mesh Control Plane. Defaults
                          to "data-science-smcp".
                        type: string
                      namespace:
                        default: istio-system
                        description: Namespace is a namespace where Service Mesh is
                          deployed. Defaults to "istio-system".
                        type: string
                    type: object
                  managementState:
                    default: Removed
                    enum:
                    - Managed
                    - Unmanaged
                    - Removed
                    pattern: ^(Managed|Unmanaged|Force|Removed)$
                    type: string
                type: object
              trustedCABundle:
                description: When set to `Managed`, adds odh-trusted-ca-bundle Configmap
                  to all namespaces that includes cluster-wide Trusted CA Bundle in
                  .data["ca-bundle.crt"]. Additionally, this fields allows admins
                  to add custom CA bundles to the configmap using the .CustomCABundle
                  field.
                properties:
                  customCABundle:
                    default: ""
                    description: A custom CA bundle that will be available for  all  components
                      in the Data Science Cluster(DSC). This bundle will be stored
                      in odh-trusted-ca-bundle ConfigMap .data.odh-ca-bundle.crt .
                    type: string
                  managementState:
                    default: Removed
                    description: managementState indicates whether and how the operator
                      should manage customized CA bundle
                    enum:
                    - Managed
                    - Removed
                    - Unmanaged
                    pattern: ^(Managed|Unmanaged|Force|Removed)$
                    type: string
                required:
                - customCABundle
                - managementState
                type: object
            required:
            - applicationsNamespace
            type: object
          status:
            description: DSCInitializationStatus defines the observed state of DSCInitialization.
            properties:
              conditions:
                description: Conditions describes the state of the DSCInitializationStatus
                  resource
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              errorMessage:
                type: string
              phase:
                description: Phase describes the Phase of DSCInitializationStatus
                  This is used by OLM UI to provide status information to the user
                type: string
              relatedObjects:
                description: RelatedObjects is a list of objects created and maintained
                  by this operator. Object references will be added to this list after
                  they have been created AND found in the cluster
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              release:
                description: Version and release type
                properties:
                  name:
                    type: string
                  version:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: featuretrackers.features.opendatahub.io
spec:
  group: features.opendatahub.io
  names:
    kind: FeatureTracker
    listKind: FeatureTrackerList
    plural: featuretrackers
    singular: featuretracker
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: FeatureTracker represents a cluster-scoped resource in the Data
          Science Cluster, specifically designed for monitoring and managing objects
          created via the internal Features API. This resource serves a crucial role
          in cross-namespace resource management, acting as an owner reference for
          various resources. The primary purpose of the FeatureTracker is to enable
          efficient garbage collection by Kubernetes. This is essential for ensuring
          that resources are automatically cleaned up and reclaimed when they are
          no longer required.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FeatureTrackerSpec defines the desired state of FeatureTracker.
            properties:
              appNamespace:
                type: string
              source:
                description: Source describes the type of object that created the
                  related Feature to this FeatureTracker.
                properties:
                  name:
                    type: string
                  type:
                    type: string
                type: object
            type: object
          status:
            description: FeatureTrackerStatus defines the observed state of FeatureTracker.
            properties:
              conditions:
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: Phase describes the Phase of FeatureTracker reconciliation
                  state. This is used by OLM UI to provide status information to the
                  user.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opendatahub-operator-controller-manager
  namespace: opendatahub-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: opendatahub-operator-controller-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - '*'
  resources:
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - '*'
  resources:
  - services
  verbs:
  - '*'
- apiGroups:
  - '*'
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - get
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - '*'
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
  - get
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs
  verbs:
  - '*'
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
  - get
- apiGroups:
  - authorization.openshift.io
  resources:
  - clusterrolebindings
  verbs:
  - '*'
- apiGroups:
  - authorization.openshift.io
  resources:
  - clusterroles
  verbs:
  - '*'
- apiGroups:
  - authorization.openshift.io
  resources:
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - authorization.openshift.io
  resources:
  - roles
  verbs:
  - '*'
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling.openshift.io
  resources:
  - machineautoscalers
  verbs:
  - delete
  - get
  - list
  - patch
- apiGroups:
  - autoscaling.openshift.io
  resources:
  - machinesets
  verbs:
  - delete
  - get
  - list
  - patch
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - buildconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - buildconfigs/instantiate
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - builds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - patch
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - ingresses
  verbs:
  - get
- apiGroups:
  - console.openshift.io
  resources:
  - consolelinks
  verbs:
  - create
  - delete
  - get
  - patch
- apiGroups:
  - console.openshift.io
  resources:
  - odhquickstarts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
- apiGroups:
  - controller-runtime.sigs.k8s.io
  resources:
  - controllermanagerconfigs
  verbs:
  - create
  - delete
  - get
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - clusterversions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/finalizers
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - rhmis
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - '*'
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - custom.tekton.dev
  resources:
  - pipelineloops
  verbs:
  - '*'
- apiGroups:
  - dashboard.opendatahub.io
  resources:
  - acceleratorprofiles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
- apiGroups:
  - dashboard.opendatahub.io
  resources:
  - odhapplications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
- apiGroups:
  - dashboard.opendatahub.io
  resources:
  - odhdocuments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
- apiGroups:
  - datasciencecluster.opendatahub.io
  resources:
  - datascienceclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - datasciencecluster.opendatahub.io
  resources:
  - datascienceclusters/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - datasciencecluster.opendatahub.io
  resources:
  - datascienceclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - datasciencepipelinesapplications.opendatahub.io
  resources:
  - datasciencepipelinesapplications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - datasciencepipelinesapplications.opendatahub.io
  resources:
  - datasciencepipelinesapplications/finalizers
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - datasciencepipelinesapplications.opendatahub.io
  resources:
  - datasciencepipelinesapplications/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - dscinitialization.opendatahub.io
  resources:
  - dscinitializations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dscinitialization.opendatahub.io
  resources:
  - dscinitializations/finalizers
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - dscinitialization.opendatahub.io
  resources:
  - dscinitializations/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - extensions
  resources:
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - features.opendatahub.io
  resources:
  - featuretrackers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - features.opendatahub.io
  resources:
  - featuretrackers/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreamtags
  verbs:
  - get
- apiGroups:
  - image.openshift.io
  resources:
  - registry/metrics
  verbs:
  - get
- apiGroups:
  - integreatly.org
  resources:
  - rhmis
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - machine.openshift.io
  resources:
  - machineautoscalers
  verbs:
  - delete
  - get
  - list
  - patch
- apiGroups:
  - machine.openshift.io
  resources:
  - machinesets
  verbs:
  - delete
  - get
  - list
  - patch
- apiGroups:
  - machinelearning.seldon.io
  resources:
  - seldondeployments
  verbs:
  - '*'
- apiGroups:
  - maistra.io
  resources:
  - servicemeshcontrolplanes
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - use
  - watch
- apiGroups:
  - maistra.io
  resources:
  - servicemeshmemberrolls
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - use
  - watch
- apiGroups:
  - maistra.io
  resources:
  - servicemeshmembers
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - use
  - watch
- apiGroups:
  - maistra.io
  resources:
  - servicemeshmembers/finalizers
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - use
  - watch
- apiGroups:
  - modelregistry.opendatahub.io
  resources:
  - modelregistries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - modelregistry.opendatahub.io
  resources:
  - modelregistries/finalizers
  verbs:
  - get
  - update
- apiGroups:
  - modelregistry.opendatahub.io
  resources:
  - modelregistries/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagerconfigs
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - probes
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheusrules
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - thanosrulers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - thanosrulers/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - thanosrulers/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - patch
- apiGroups:
  - networking.istio.io
  resources:
  - envoyfilters
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - oauth.openshift.io
  resources:
  - oauthclients
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - opendatahub.io
  resources:
  - odhdashboardconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.authorino.kuadrant.io
  resources:
  - authorinos
  verbs:
  - '*'
- apiGroups:
  - operator.knative.dev
  resources:
  - knativeservings
  verbs:
  - '*'
- apiGroups:
  - operator.openshift.io
  resources:
  - consoles
  verbs:
  - delete
  - list
  - patch
  - watch
- apiGroups:
  - operator.openshift.io
  resources:
  - ingresscontrollers
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - catalogsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  verbs:
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - patch
- apiGroups:
  - operators.coreos.com
  resources:
  - operatorconditions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
- apiGroups:
  - ray.io
  resources:
  - rayjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - routers/federate
  verbs:
  - get
- apiGroups:
  - route.openshift.io
  resources:
  - routers/metrics
  verbs:
  - get
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.istio.io
  resources:
  - authorizationpolicies
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resourceNames:
  - anyuid
  resources:
  - securitycontextconstraints
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resourceNames:
  - restricted
  resources:
  - securitycontextconstraints
  verbs:
  - '*'
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - services/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - serving.kserve.io
  resources:
  - clusterservingruntimes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - clusterservingruntimes/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - clusterservingruntimes/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - serving.kserve.io
  resources:
  - inferencegraphs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - inferencegraphs/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - serving.kserve.io
  resources:
  - inferenceservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - inferenceservices/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - inferenceservices/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - serving.kserve.io
  resources:
  - predictors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - predictors/finalizers
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - serving.kserve.io
  resources:
  - predictors/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - serving.kserve.io
  resources:
  - servingruntimes
  verbs:
  - '*'
- apiGroups:
  - serving.kserve.io
  resources:
  - servingruntimes/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - servingruntimes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - serving.kserve.io
  resources:
  - trainedmodels
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.kserve.io
  resources:
  - trainedmodels/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - create
  - delete
  - get
  - patch
- apiGroups:
  - tekton.dev
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - template.openshift.io
  resources:
  - templates
  verbs:
  - '*'
- apiGroups:
  - trustyai.opendatahub.io
  resources:
  - trustyaiservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - trustyai.opendatahub.io
  resources:
  - trustyaiservices/finalizers
  verbs:
  - update
- apiGroups:
  - trustyai.opendatahub.io
  resources:
  - trustyaiservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - user.openshift.io
  resources:
  - groups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - user.openshift.io
  resources:
  - users
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opendatahub-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opendatahub-operator-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opendatahub-operator-controller-manager-role
subjects:
- kind: ServiceAccount
  name: opendatahub-operator-controller-manager
  namespace: opendatahub-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 0.0.0.0:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  name: opendatahub-operator-manager-config
  namespace: opendatahub-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: opendatahub-operator-controller-manager-metrics-service
  namespace: opendatahub-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8080
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
    service.beta.openshift.io/serving-cert-secret-name: opendatahub-operator-controller-webhook-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: opendatahub-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: opendatahub-operator
  name: opendatahub-operator-webhook-service
  namespace: opendatahub-operator-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: opendatahub-operator-controller-manager
  namespace: opendatahub-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        name: opendatahub-operator
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=0.0.0.0:8080
        command:
        - /manager
        env:
        - name: DISABLE_DSC_CONFIG
          value: "true"
        image: quay.io/opendatahub/opendatahub-operator@sha256:a9db13f8db42f6996c433dd61dfadbc148111dca5dd090f5efa277296e3a0260
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: opendatahub-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: opendatahub-operator-controller-webhook-cert
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: opendatahub-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: opendatahub-operator-webhook-service
      namespace: opendatahub-operator-system
      path: /validate-opendatahub-io-v1
  failurePolicy: Fail
  name: operator.opendatahub.io
  rules:
  - apiGroups:
    - datasciencecluster.opendatahub.io
    - dscinitialization.opendatahub.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - datascienceclusters
    - dscinitializations
  sideEffects: None
