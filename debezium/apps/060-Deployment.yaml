apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
  labels:
    app: kronos
  name: kronos
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kronos
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
      labels:
        app: kronos
    spec:
      containers:
        - image: quay.io/tealc/debezium-crypto-app@sha256:40e4c6eba11ee14255d8e8ac0dc8a5fb420a3e6224bc5569dbfe4927ccf2ef67
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: kronos-config
            - secretRef:
                name: kronos-secret
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kronos
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
      serviceAccountName: kronos-sa