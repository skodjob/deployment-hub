apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: imhotep-mysql
  labels:
    strimzi.io/cluster: imhotep
    app: imhotep
spec:
  class: io.debezium.connector.mysql.MySqlConnector
  autoRestart:
    enabled: true
  config:
    database.hostname: imhotep-mysql.debezium-mysql.svc.cluster.local
    database.port: 3306
    database.user: ${secrets:debezium-mysql/imhotep-mysql-secret:username}
    database.password: ${secrets:debezium-mysql/imhotep-mysql-secret:password}
    database.dbname: ${secrets:debezium-mysql/imhotep-mysql-secret:database}
    database.server.id: 223344
    topic.prefix: mysql
    snapshot.mode: when_needed
    table.include.list: debezium.crypto
    schema.history.internal.kafka.bootstrap.servers: anubis-kafka-bootstrap.strimzi-kafka.svc:9093
    schema.history.internal.kafka.topic: schema-changes.crypto
    schema.history.internal.consumer.security.protocol: SSL
    schema.history.internal.consumer.ssl.keystore.type: PEM
    schema.history.internal.consumer.ssl.keystore.certificate.chain: ${secrets:strimzi-connect/imhotep:user.crt}
    schema.history.internal.consumer.ssl.keystore.key: ${secrets:strimzi-connect/imhotep:user.key}
    schema.history.internal.consumer.ssl.truststore.type: PEM
    schema.history.internal.consumer.ssl.truststore.certificates: ${secrets:strimzi-connect/anubis-cluster-ca-cert:ca.crt}
    schema.history.internal.producer.security.protocol: SSL
    schema.history.internal.producer.ssl.keystore.type: PEM
    schema.history.internal.producer.ssl.keystore.certificate.chain: ${secrets:strimzi-connect/imhotep:user.crt}
    schema.history.internal.producer.ssl.keystore.key: ${secrets:strimzi-connect/imhotep:user.key}
    schema.history.internal.producer.ssl.truststore.type: PEM
    schema.history.internal.producer.ssl.truststore.certificates: ${secrets:strimzi-connect/anubis-cluster-ca-cert:ca.crt}
    producer.override.acks: 1